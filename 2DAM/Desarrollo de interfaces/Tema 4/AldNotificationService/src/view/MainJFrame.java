/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import clock.IAlarmListener;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.JMenuItem;

/**
 *
 * @author dides
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alarmPopupMenu = new javax.swing.JPopupMenu();
        clock = new clock.ClockBean();
        menuBar = new javax.swing.JMenuBar();
        notificationMenu = new javax.swing.JMenu();
        notificationMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        notificationMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Pictogrammers-Material-Bell.16.png"))); // NOI18N

        notificationMenuItem.setText("Notifications...");
        notificationMenu.add(notificationMenuItem);

        quitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        quitMenuItem.setText("Quit");
        notificationMenu.add(quitMenuItem);

        menuBar.add(notificationMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    public void addNotificationMenuItemItemListener(ActionListener listener) {
        this.notificationMenuItem.addActionListener(listener);
    }
    
    

    public void enableAlarm(boolean enable) {
        this.clock.setEnableAlarm(enable);
    }

    public String getAlarmMessage() {
        return this.clock.getMessage();
    }

    public void setAlarmMessage(String message) {
        this.clock.setMessage(message);
    }

    public void setMode24(boolean mode24h) {
        this.clock.setMode24(mode24h);
    }

    public void setEnableAlarm(boolean enable) {
        this.clock.setEnableAlarm(enable);
    }

    public int getMinutesAlarm() {
        return this.clock.getMinutesAlarm();
    }

    public int getHourAlarm() {
        return this.clock.getHourAlarm();
    }

    public void setHourAlarm(int hour) {
        this.clock.setHourAlarm(hour);
    }

    public void setMinutesAlarm(int minute) {
        this.clock.setMinutesAlarm(minute);
    }

    public boolean isMode24() {
        return this.clock.isMode24();
    }

    public boolean isEnableAlarm() {
        return this.clock.isEnableAlarm();
    }

    public void addAlarmListener(IAlarmListener receptor) {
        this.clock.addAlarmListener(receptor);
    }

    public void addNotificationMenuMouseListener(MouseListener listener) {
        this.addMouseListener(listener);
    }

    public void showPopup(MouseEvent me) {
        this.alarmPopupMenu.show(me.getComponent(), me.getX(), me.getY());
    }

    public void addEnableDisableNotificationMenuItem(JMenuItem item) {
        this.alarmPopupMenu.add(item);
    }
    
    public void addQuitMenuItemListener(ActionListener listener) {
        this.quitMenuItem.addActionListener(listener);
    }

    //TODO añadir método para configurar la acción del menú Quit
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu alarmPopupMenu;
    private clock.ClockBean clock;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu notificationMenu;
    private javax.swing.JMenuItem notificationMenuItem;
    private javax.swing.JMenuItem quitMenuItem;
    // End of variables declaration//GEN-END:variables

}
