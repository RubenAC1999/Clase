
package view;

import clock.AlarmEvent;
import clock.ClockBean;
import clock.IAlarmListener;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;


public class MainJFrame extends javax.swing.JFrame  implements IAlarmListener {
    
    public MainJFrame() {
        initComponents();
    }
    
    public boolean isClockBeanMode24() {
        return this.clockBean.isMode24();
    }
    
    public boolean isAlarmEnabled() {
        return this.clockBean.isEnableAlarm();
    }
    
    public void setClockBeanMode24h(boolean b) {
        this.clockBean.setMode24(b);
    }
    
    public void setAlarm(int hour, int minutes) {
        this.clockBean.setHourAlarm(hour);
        this.clockBean.setMinutesAlarm(minutes);
    }
    
    public void setAlarmMessage(String message) {
        this.clockBean.setMessage(message);
    }
    
    public String getAlarmMessage() {
        return this.clockBean.getMessage();
    }
    
    public int getHourAlarm() {
        return this.clockBean.hourAlarm;
    }
    
    public int getMinutesAlarm() {
        return this.clockBean.minutesAlarm;
    }
    
    public void setClockBeanAlarmListener(IAlarmListener listener) {
        this.clockBean.addAlarmListener(listener);
    }
    
    public void setClockBeanAlarmEnabled(boolean b) {
        this.clockBean.setEnableAlarm(b);
    }
    
    public void addEstablishmentDetailsMenuItemActionListener(ActionListener listener) {
        this.establishmentDetailsMenuItem.addActionListener(listener);
    }
    
    public void addComputerManagementMenuItemActionListener(ActionListener listener) {
        this.computerManagementMenuItem.addActionListener(listener); 
    }
    
    public void addQuitMenuItemActionListener(ActionListener listener) {
        this.quitMenuItem.addActionListener(listener);
    }
    
    public void addNotificationsMenuItemActionListener(ActionListener listener) {
        this.notificationsMenuItem.addActionListener(listener);
    }
    
    public void addGenerateReportMenuItemActionListener(ActionListener listener) {
        this.generateReportMenuItem.addActionListener(listener);
    }
    
    public void setFocus() {
        getContentPane().setFocusable(true);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        clockBean = new clock.ClockBean();
        mainMenuBar = new javax.swing.JMenuBar();
        mainMenu = new javax.swing.JMenu();
        establishmentDetailsMenuItem = new javax.swing.JMenuItem();
        computerManagementMenuItem = new javax.swing.JMenuItem();
        quitMenuItem = new javax.swing.JMenuItem();
        clockMenu = new javax.swing.JMenu();
        notificationsMenuItem = new javax.swing.JMenuItem();
        reportsMenu = new javax.swing.JMenu();
        generateReportMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(52, 152, 219));

        mainMenuBar.setBackground(new java.awt.Color(245, 245, 255));

        mainMenu.setText("File");

        establishmentDetailsMenuItem.setText("Establishment details...");
        mainMenu.add(establishmentDetailsMenuItem);

        computerManagementMenuItem.setText("Computer management...");
        mainMenu.add(computerManagementMenuItem);

        quitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        quitMenuItem.setText("Quit");
        mainMenu.add(quitMenuItem);

        mainMenuBar.add(mainMenu);

        clockMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/bell-ring(1).png"))); // NOI18N

        notificationsMenuItem.setText("Notifications...");
        clockMenu.add(notificationsMenuItem);

        mainMenuBar.add(clockMenu);

        reportsMenu.setText("Reports");

        generateReportMenuItem.setText("Generate report...");
        reportsMenu.add(generateReportMenuItem);

        mainMenuBar.add(reportsMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(272, Short.MAX_VALUE)
                .addComponent(clockBean, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(234, Short.MAX_VALUE)
                .addComponent(clockBean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private clock.ClockBean clockBean;
    private javax.swing.JMenu clockMenu;
    private javax.swing.JMenuItem computerManagementMenuItem;
    private javax.swing.JMenuItem establishmentDetailsMenuItem;
    private javax.swing.JMenuItem generateReportMenuItem;
    private javax.swing.JMenu mainMenu;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JMenuItem notificationsMenuItem;
    private javax.swing.JMenuItem quitMenuItem;
    private javax.swing.JMenu reportsMenu;
    // End of variables declaration//GEN-END:variables

    @Override
    public void captureAlarm(AlarmEvent ae) {
       JOptionPane.showMessageDialog(rootPane, this.getAlarmMessage());
       this.clockBean.setEnableAlarm(false);
    }
}
